/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apparriendos;

/**
 *
 * @author modosito
 */

import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class frmArticulo extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmArticulo
     */
    public frmArticulo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtdescripcion = new javax.swing.JTextField();
        txtmodelo = new javax.swing.JTextField();
        txtcodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtnumero_serie = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboxCategoria = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cboxMarca = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservacion = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel4.setText("MODELO");

        jLabel2.setText("DESCRIPCION");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apparriendos/edit-clear.png"))); // NOI18N
        jButton5.setText("LIMPIAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apparriendos/cross.png"))); // NOI18N
        jButton3.setText("ELIMINAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtdescripcion.setName("txtdescripcion"); // NOI18N

        txtmodelo.setName("txtmodelo"); // NOI18N

        txtcodigo.setName("txtcodigo"); // NOI18N

        jLabel3.setText("NUMERO SERIE");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apparriendos/add.png"))); // NOI18N
        jButton1.setText("INGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtnumero_serie.setName("txtnumero_serie"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apparriendos/update.png"))); // NOI18N
        jButton2.setText("ACTUALIZAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("CODIGO");

        jLabel7.setText("CATEGORIA");

        jLabel8.setText("MARCA");
        jLabel8.setToolTipText("");

        txtObservacion.setColumns(20);
        txtObservacion.setRows(5);
        jScrollPane2.setViewportView(txtObservacion);

        jLabel5.setText("OBSERVACION");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("MODULO ARTICULO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(txtdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(txtnumero_serie, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(txtmodelo, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(cboxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(cboxMarca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtnumero_serie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtmodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Limpiar();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try
        {
            if(txtcodigo.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Debe seleccionar Registro Administrador a eliminar");
            }
            else
            {
                Connection miConexion=(Connection) Conexion.GetConnection();
                Statement statement=(Statement) miConexion.createStatement();
                String codigo = txtcodigo.getText();
                int cantidad = statement.executeUpdate("DELETE FROM tb_articulo where codigo = '"+ codigo +"'");
                if(cantidad > 0)
                {
                    JOptionPane.showMessageDialog(this, "Registro eliminado exitosamente");
                    Limpiar();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Problema eliminando registro de sistema");
                }
            }
        } catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Error "+ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection miConexion=(Connection) Conexion.GetConnection();
        try
        {
            
            if(txtdescripcion.getText().trim().isEmpty())
            {
                 JOptionPane.showMessageDialog(this, "Debe ingresar campo descripción"); 
            }
            else if(txtcodigo.getText().trim().isEmpty())
            {
                 JOptionPane.showMessageDialog(this, "Debe ingresar campo código"); 
            }
            else
            {
                 Statement statement=(Statement) miConexion.createStatement(); 
                 String descripcion = txtdescripcion.getText();
                 String codigo = txtcodigo.getText();
                 String serie = txtnumero_serie.getText();
                 String modelo = txtmodelo.getText();
                 String observacion = txtObservacion.getText();
                 
                   ResultSet rs = statement.executeQuery("SELECT COUNT(*) AS num FROM tb_articulo WHERE codigo ='"+ codigo +"' ");
                   int rows= 0;
                   if(rs.next()){
                     rows = rs.getInt("num");
                   }
                  if(rows > 0){
                       JOptionPane.showMessageDialog(this, "Registro ingresado existente en sistema");                      
                  }
                  else
                  {
                        String categoria = (String) cboxCategoria.getSelectedItem();
                        rs = statement.executeQuery("SELECT * from tb_categoria where descripcion = '"+ categoria +"'");  
                        int cod_categoria =0;
                        while(rs.next()){                
                              cod_categoria = rs.getInt("codigo");    
                        }
                        String marca = (String) cboxMarca.getSelectedItem();
                        rs = statement.executeQuery("SELECT * from tb_marca where descripcion = '"+ marca +"'");  
                        int cod_marca =0;
                        while(rs.next()){                
                             cod_marca = rs.getInt("codigo");    
                        }     

                         statement.execute("insert into tb_articulo values('"+codigo+"','"+descripcion+"','"+serie+"','"+cod_categoria+"','"+cod_marca+"','"+modelo+"','"+observacion+"')");

                        JOptionPane.showMessageDialog(this, "Datos ingresados correctamente");

                        Limpiar();
                        statement.close();
                        miConexion.close();                          
                  }                 

           
            }            
 
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Error "+ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        //int row = jTable1.rowAtPoint( evt.getPoint());
        int fila = this.jTable1.getSelectedRow();

        // luego, obtengo la columna seleccionada

        int columna = this.jTable1.getSelectedColumn();

        // por ultimo, obtengo el valor de la celda

        String dato = String.valueOf(this.jTable1.getValueAt(fila, 0));

        ObtenerRegistro(dato);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
             if(txtdescripcion.getText().trim().isEmpty())
            {
                 JOptionPane.showMessageDialog(this, "Debe ingresar campo descripción"); 
            }
            else if(txtcodigo.getText().trim().isEmpty())
            {
                 JOptionPane.showMessageDialog(this, "Debe ingresar campo código"); 
            }
            else
            {
                Connection miConexion=(Connection) Conexion.GetConnection();
                Statement statement=(Statement) miConexion.createStatement();

            String descripcion = txtdescripcion.getText();
            String codigo = txtcodigo.getText();
            String serie = txtnumero_serie.getText();
            String modelo = txtmodelo.getText();
            String observacion = txtObservacion.getText();

            String categoria = (String) cboxCategoria.getSelectedItem();
            ResultSet rs = statement.executeQuery("SELECT * from tb_categoria where descripcion = '"+ categoria +"'");  
            int cod_categoria =0;
             while(rs.next()){                
                 cod_categoria = rs.getInt("codigo");    
             }
            String marca = (String) cboxMarca.getSelectedItem();
            rs = statement.executeQuery("SELECT * from tb_marca where descripcion = '"+ marca +"'");  
            int cod_marca =0;
             while(rs.next()){                
                 cod_marca = rs.getInt("codigo");    
             }  

                int cantidad = statement.executeUpdate("UPDATE tb_articulo SET descripcion = '"+ descripcion +"', numero_serie = '"+ serie +"', cod_categoria = '"+ cod_categoria +"', cod_marca = '"+ cod_marca +"', modelo = '"+ modelo +"', observacion = '"+ observacion +"' WHERE codigo = '"+ codigo +"'");
                if(cantidad > 0)
                {
                    JOptionPane.showMessageDialog(this, "Registro actualizado exitosamente");
                    Limpiar();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Problema actualizando registro de sistema");
                }
            }
        } catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Error "+ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        cargarlista(); 
              Listar();  
    }//GEN-LAST:event_formInternalFrameOpened

    
    
      private void ObtenerRegistro(String codigo){
        
        try
        {
             ResultSet rs = null;
             Connection miConexion=(Connection) Conexion.GetConnection();
             Statement statement=(Statement) miConexion.createStatement();
             rs = statement.executeQuery("SELECT * from tb_articulo where codigo = '"+ codigo +"'");
             
             while(rs.next()){
                 
         
                 txtdescripcion.setText(rs.getString("descripcion"));
                 txtcodigo.setText(rs.getString("codigo"));
                 txtnumero_serie.setText(rs.getString("numero_serie"));
                 txtmodelo.setText(rs.getString("modelo"));
                 txtObservacion.setText(rs.getString("observacion"));
                
                 int cod_categoria = rs.getInt("cod_categoria");

                 ResultSet rs2 = statement.executeQuery("SELECT * from tb_categoria where codigo = '"+ cod_categoria +"'");  
                 String Cat = "";
                 while(rs2.next()){                
                    Cat = rs2.getString("descripcion");        
                 }
                 this.cboxCategoria.setSelectedItem(Cat) ; 
                 
                 int cod_marca = rs.getInt("cod_marca");

                 rs2 = statement.executeQuery("SELECT * from tb_marca where codigo = '"+ cod_marca +"'");  
                 String Ma = "";
                 while(rs2.next()){                
                    Ma = rs2.getString("descripcion");        
                 }
                 this.cboxMarca.setSelectedItem(Ma) ; 
                 
             }
        }
        catch (Exception ex)
        {
           // JOptionPane.showMessageDialog(this, "Error "+ex.getMessage());
        }

    }
      
       private void Limpiar(){
           
       txtObservacion.setText("");
       txtdescripcion.setText("");
       txtcodigo.setText("");
       txtnumero_serie.setText("");
       txtmodelo.setText("");
       txtObservacion.setText("");
        
        Listar();
    }
    
    
    public  void Listar(){
        DefaultTableModel modelo = 
         new DefaultTableModel();
 jTable1.setModel(modelo);
 
        try
        {        
        ResultSet rs = null;
        Connection miConexion=(Connection) Conexion.GetConnection();
        Statement statement=(Statement) miConexion.createStatement();
        
         rs = statement.executeQuery("SELECT * from tb_articulo");
 
         modelo.addColumn("CODIGO");
         modelo.addColumn("DESCRIPCION");
         modelo.addColumn("MODELO");
         while(rs.next()){
            Object []ob=new Object[4];
            ob[0]=(rs.getInt("codigo"));
            ob[1]=(rs.getString("descripcion"));
            ob[2]=(rs.getString("modelo"));
            modelo.addRow(ob);
            ob=null;
         }    
            rs.close();
            statement.close();
            miConexion.close();
            
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Error "+ex.getMessage());
        }
    }  
    
    private void cargarlista() 
    {
   
       try {
             ResultSet rs = null;
             Connection miConexion=(Connection) Conexion.GetConnection();
             Statement statement=(Statement) miConexion.createStatement();  
              rs = statement.executeQuery ("SELECT * FROM tb_categoria");

            while(rs.next()){
               String tmpStrObtenido = rs.getString("descripcion");
               cboxCategoria.addItem(tmpStrObtenido);
             }
            
            
             rs = statement.executeQuery ("SELECT * FROM tb_marca");

            while(rs.next()){
               String tmpStrObtenido = rs.getString("descripcion");
               cboxMarca.addItem(tmpStrObtenido);
             }
             miConexion.close();
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, "Error "+ ex.getMessage());
        }        
                    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboxCategoria;
    private javax.swing.JComboBox<String> cboxMarca;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtObservacion;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtdescripcion;
    private javax.swing.JTextField txtmodelo;
    private javax.swing.JTextField txtnumero_serie;
    // End of variables declaration//GEN-END:variables
}
